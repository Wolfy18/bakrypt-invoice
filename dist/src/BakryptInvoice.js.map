{"version":3,"file":"BakryptInvoice.js","sourceRoot":"","sources":["../../src/BakryptInvoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css } from 'lit';\r\nimport { useEffect, useState } from 'haunted';\r\nimport shoeStyles from '@shoelace-style/shoelace/dist/themes/light.styles.js';\r\n\r\nimport SlInput from '@shoelace-style/shoelace/dist/components/input/input.js';\r\nimport SlTextarea from '@shoelace-style/shoelace/dist/components/textarea/textarea.js';\r\nimport SlDivider from '@shoelace-style/shoelace/dist/components/divider/divider.js';\r\nimport SlDetails from '@shoelace-style/shoelace/dist/components/details/details.js';\r\nimport SlQrCode from '@shoelace-style/shoelace/dist/components/qr-code/qr-code.js';\r\nimport SlAlert from '@shoelace-style/shoelace/dist/components/alert/alert.js';\r\nimport SlBadge from '@shoelace-style/shoelace/dist/components/badge/badge.js';\r\nimport SlButton from '@shoelace-style/shoelace/dist/components/button/button.js';\r\nimport { ITransaction, ErrorResponse, AccessToken } from './types.js';\r\nimport { useStyles } from './hooks/useStyles.js';\r\n\r\nif (!customElements.get('sl-input')) {\r\n  customElements.define('sl-input', SlInput);\r\n}\r\n\r\nif (!customElements.get('sl-textarea')) {\r\n  customElements.define('sl-textarea', SlTextarea);\r\n}\r\n\r\nif (!customElements.get('sl-divider')) {\r\n  customElements.define('sl-divider', SlDivider);\r\n}\r\n\r\nif (!customElements.get('sl-details')) {\r\n  customElements.define('sl-details', SlDetails);\r\n}\r\n\r\nif (!customElements.get('sl-alert')) {\r\n  customElements.define('sl-alert', SlAlert);\r\n}\r\n\r\nif (!customElements.get('sl-badge')) {\r\n  customElements.define('sl-badge', SlBadge);\r\n}\r\n\r\nif (!customElements.get('sl-button')) {\r\n  customElements.define('sl-button', SlButton);\r\n}\r\n\r\nif (!customElements.get('sl-qr-code')) {\r\n  customElements.define('sl-qr-code', SlQrCode);\r\n}\r\n\r\nfunction BakryptInvoice(\r\n  this: any,\r\n  {\r\n    transaction = undefined,\r\n    collection = undefined,\r\n    accessToken = undefined,\r\n    testnet,\r\n  }: // open = false,\r\n  {\r\n    transaction: ITransaction | undefined;\r\n    collection: [] | undefined;\r\n    accessToken: AccessToken | undefined;\r\n    testnet: string;\r\n    // open: boolean;\r\n  }\r\n) {\r\n  const bakryptURI = testnet\r\n    ? 'https://testnet.bakrypt.io'\r\n    : 'https://bakrypt.io';\r\n\r\n  const transactionVariants: { [key: string]: string } = {\r\n    error: 'danger',\r\n    rejected: 'danger',\r\n    canceled: 'danger',\r\n    burning: 'warning',\r\n    royalties: 'warning',\r\n    processing: 'warning',\r\n    refund: 'warning',\r\n    confirmed: 'success',\r\n    'stand-by': 'success',\r\n    waiting: 'primary',\r\n    preauth: 'primary',\r\n  };\r\n\r\n  const [transactionObj, setTransaction] = useState<ITransaction>();\r\n\r\n  useStyles(this, [\r\n    shoeStyles,\r\n    css`\r\n      :host {\r\n        font-family: 'arial';\r\n        font-weight: 400;\r\n      }\r\n\r\n      :host sl-input,\r\n      :host input,\r\n      :host sl-textarea,\r\n      :host sl-details {\r\n        margin-bottom: 2rem;\r\n      }\r\n\r\n      :host .form-control__help-text {\r\n        margin-top: 0.5rem;\r\n      }\r\n    `,\r\n  ]);\r\n\r\n  const notify = (message: string, type: string) => {\r\n    const event = new CustomEvent('notification', {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: [message, type],\r\n    });\r\n\r\n    this.dispatchEvent(event);\r\n  };\r\n\r\n  const retry = () => {\r\n    const event = new CustomEvent('retryTransaction', {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { tx: transaction },\r\n    });\r\n\r\n    this.dispatchEvent(event);\r\n  };\r\n\r\n  const refund = () => {\r\n    const event = new CustomEvent('refundTransaction', {\r\n      bubbles: true,\r\n      composed: true,\r\n      detail: { tx: transaction },\r\n    });\r\n\r\n    this.dispatchEvent(event);\r\n  };\r\n\r\n  // Retrieve transaction information\r\n  const retrieveTransaction = async (uuid: string) => {\r\n    let tx;\r\n\r\n    try {\r\n      const requestHeaders: any = {\r\n        'content-type': 'application/json',\r\n        Authorization: `Bearer ${accessToken}`,\r\n      };\r\n\r\n      // if (csrfToken && csrfToken.length > 0) {\r\n      //   requestHeaders['X-CSRFToken'] = csrfToken;\r\n      // }\r\n\r\n      const retrieveTransactionRequest = await fetch(\r\n        `${bakryptURI}/v1/transactions/${uuid}/`,\r\n        {\r\n          method: 'GET',\r\n          headers: requestHeaders,\r\n        }\r\n      );\r\n\r\n      if (retrieveTransactionRequest.ok) {\r\n        const jsonResponse: ITransaction =\r\n          await retrieveTransactionRequest.json();\r\n        setTransaction(jsonResponse);\r\n        tx = jsonResponse;\r\n\r\n        // Repeat call every 15 seconds\r\n        setTimeout(() => {\r\n          retrieveTransaction(uuid);\r\n        }, 10000);\r\n      } else {\r\n        const jsonResponse: ErrorResponse =\r\n          await retrieveTransactionRequest.json();\r\n        if (jsonResponse.error_description)\r\n          notify(jsonResponse.error_description, 'danger');\r\n        else if (jsonResponse.error) notify(jsonResponse.error, 'danger');\r\n        else if (jsonResponse.detail) notify(jsonResponse.detail, 'danger');\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n      notify('Unable to retrieve transaction.', 'danger');\r\n    }\r\n\r\n    return tx;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transaction) {\r\n      setTransaction(transaction);\r\n      if (accessToken) retrieveTransaction(transaction.uuid);\r\n    }\r\n  }, [transaction, collection]);\r\n\r\n  return html`\r\n    <!-- Transaction Dialog -->\r\n    <div style=\"padding: 1rem\">\r\n      <div\r\n        style=\"\r\n      \"\r\n      >\r\n        <small style=\"float:right\"><i>Unique Identifier</i></small>\r\n        <sl-input\r\n          maxlength=\"255\"\r\n          label=\"Policy ID\"\r\n          value=${transactionObj\r\n            ? (<ITransaction>transactionObj).policy_id\r\n            : ''}\r\n          type=\"text\"\r\n          readonly\r\n          filled\r\n        ></sl-input>\r\n\r\n        ${transactionObj &&\r\n        !['confirmed', 'canceled'].includes(\r\n          (<ITransaction>transactionObj).status\r\n        )\r\n          ? html` <div\r\n              style=\"display:grid; grid-template-columns: repeat(auto-fit, minmax(305px, 1fr)); grid-gap: 0.5rem; align-items:center; margin-bottom: 2rem\"\r\n            >\r\n              <sl-details\r\n                summary=\"Click here to show a QR Code and scan the deposit address.\"\r\n              >\r\n                <div style=\"text-align:center\">\r\n                  <sl-qr-code\r\n                    value=${transactionObj\r\n                      ? (<ITransaction>transactionObj).deposit_address\r\n                      : 'Not found'}\r\n                    label=\"Scan this code for the deposit_address!\"\r\n                  ></sl-qr-code>\r\n                </div>\r\n              </sl-details>\r\n              <sl-alert variant=\"warning\" open>\r\n                <strong>DO NOT TRANSFER FUNDS FROM AN EXCHANGE!</strong> <br />\r\n                We will send all tokens and change to the payor's address;\r\n                meaning that the payment must be done from a wallet that you can\r\n                control and its capable of manage native tokens on Cardano like\r\n                <a target=\"_blank\" rel=\"nofollow\" href=\"https://namiwallet.io/\"\r\n                  >Nami</a\r\n                >,\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"nofollow\"\r\n                  href=\"https://flint-wallet.com/\"\r\n                  >Flint</a\r\n                >,\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"nofollow\"\r\n                  href=\"https://yoroi-wallet.com/#/\"\r\n                >\r\n                  Yoroi</a\r\n                >,\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"nofollow\"\r\n                  href=\"https://daedaluswallet.io/\"\r\n                  >Daedalus</a\r\n                >\r\n                or\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"nofollow\"\r\n                  href=\"https://ccvault.io/app/mainnet/welcome\"\r\n                  >Eternl</a\r\n                >\r\n              </sl-alert>\r\n            </div>`\r\n          : null}\r\n\r\n        <h4 style=\"color: var(--sl-color-warning-600);\">\r\n          Payment Type:\r\n          ${transactionObj ? (<ITransaction>transactionObj).type : null}\r\n        </h4>\r\n        ${transactionObj &&\r\n        !['confirmed', 'canceled'].includes(\r\n          (<ITransaction>transactionObj).status\r\n        )\r\n          ? html` <sl-input\r\n              maxlength=\"255\"\r\n              type=\"number\"\r\n              label=\"Processing Cost\"\r\n              value=${transactionObj ? (<ITransaction>transactionObj).cost : ''}\r\n              readonly\r\n              filled\r\n            ></sl-input>`\r\n          : html` <sl-input\r\n              maxlength=\"255\"\r\n              type=\"number\"\r\n              label=\"Min. Processing Cost\"\r\n              value=${transactionObj ? (<ITransaction>transactionObj).cost : ''}\r\n              readonly\r\n              filled\r\n            ></sl-input>`}\r\n        ${transactionObj &&\r\n        !['confirmed', 'canceled'].includes(\r\n          (<ITransaction>transactionObj).status\r\n        )\r\n          ? html` <small style=\"float:right\">Click to copy</small\r\n              ><sl-input\r\n                maxlength=\"255\"\r\n                label=\"Deposit Address\"\r\n                value=${transactionObj\r\n                  ? (<ITransaction>transactionObj).deposit_address\r\n                  : ''}\r\n                type=\"password\"\r\n                readonly\r\n                filled\r\n                toggle-password\r\n                @click=${(e: any) => {\r\n                  if (e.currentTarget && e.currentTarget.value.length > 0) {\r\n                    const depAddr = e.currentTarget.value;\r\n                    navigator.clipboard.writeText(depAddr);\r\n                    notify('Copy to clipboard!', 'success');\r\n                  } else if (e.path && e.path.length > 0) {\r\n                    const depAddr = e.path[0].value;\r\n                    navigator.clipboard.writeText(depAddr);\r\n                    notify('Copy to clipboard!', 'success');\r\n                  }\r\n                  return false;\r\n                }}\r\n              ></sl-input>`\r\n          : null}\r\n        <sl-input\r\n          maxlength=\"255\"\r\n          label=\"Transaction UUID\"\r\n          value=${transactionObj ? (<ITransaction>transactionObj).uuid : ''}\r\n          type=\"text\"\r\n          readonly\r\n          filled\r\n        ></sl-input>\r\n        <sl-input\r\n          maxlength=\"255\"\r\n          label=\"Created on\"\r\n          value=${transactionObj\r\n            ? new Date((<ITransaction>transactionObj).created_on).toUTCString()\r\n            : ''}\r\n          type=\"text\"\r\n          readonly\r\n          filled\r\n        ></sl-input>\r\n        <sl-input\r\n          maxlength=\"255\"\r\n          label=\"Expires on\"\r\n          value=${transactionObj\r\n            ? new Date((<ITransaction>transactionObj).expires_on).toUTCString()\r\n            : ''}\r\n          type=\"text\"\r\n          readonly\r\n          filled\r\n        ></sl-input>\r\n        <sl-input\r\n          maxlength=\"255\"\r\n          label=\"Conv. Fees\"\r\n          value=${transactionObj\r\n            ? (<ITransaction>transactionObj).convenience_fee\r\n            : ''}\r\n          type=\"text\"\r\n          readonly\r\n          filled\r\n        ></sl-input>\r\n\r\n        <sl-alert variant=\"warning\" open>\r\n          Remember, to complete your transaction, your payment must be received\r\n          before the expiration time shown above. Late payments can be refunded.\r\n          Minted assets are non-refundable and non-transferable. All times shown\r\n          are UTC (Coordinated Universal Time).\r\n        </sl-alert>\r\n        <sl-divider></sl-divider>\r\n        <div>\r\n          <sl-textarea\r\n            style=\"margin-bottom:1rem\"\r\n            label=\"The status refreshes every 10 seconds.\"\r\n            value=${transaction\r\n              ? (<ITransaction>transaction).status_description\r\n              : ''}\r\n            readonly\r\n            filled\r\n          >\r\n          </sl-textarea>\r\n          <sl-badge\r\n            style=\"margin-bottom: 2rem; display: grid\"\r\n            .pulse=${true}\r\n            variant=${transactionObj && (<ITransaction>transactionObj).status\r\n              ? transactionVariants[<string>transactionObj.status]\r\n              : 'neutral'}\r\n            >${transactionObj\r\n              ? (<ITransaction>transactionObj).status\r\n              : ''}</sl-badge\r\n          >\r\n          <p>\r\n            Please do not refresh the page, otherwise this session will be\r\n            restarted.\r\n          </p>\r\n\r\n          <sl-divider></sl-divider>\r\n          ${collection && collection.length\r\n            ? html` <h4>Minting Summary</h4>\r\n                <p>\r\n                  <small\r\n                    ><i\r\n                      >You must send the minimum amount of ADA shown above. Any\r\n                      change will be returned automatically to the payor's\r\n                      wallet.</i\r\n                    ></small\r\n                  ><br /><br />\r\n                  <small\r\n                    ><i>**Tokens are returned to the payor's wallet.</i></small\r\n                  >\r\n                </p>\r\n\r\n                <table style=\"text-align:left; width: 100%\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item</th>\r\n                      <th>Qty</th>\r\n                      <th>Price</th>\r\n                      <th>Total</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <p>** Bond per Asset.<br /></p>\r\n                      </td>\r\n                      <td>${collection ? collection.length : null}</td>\r\n                      <td>1.95</td>\r\n                      <td>\r\n                        ${collection\r\n                          ? (collection.length * 1.95).toFixed(2)\r\n                          : null}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <p>** Surety Bond.</p>\r\n                      </td>\r\n                      <td>1</td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? (<ITransaction>transactionObj).surety_bond\r\n                          : ''}\r\n                      </td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? (<ITransaction>transactionObj).surety_bond\r\n                          : ''}\r\n                      </td>\r\n                    </tr>\r\n                    ${transactionObj &&\r\n                    (<ITransaction>transactionObj).has_royalties\r\n                      ? html`<tr>\r\n                            <td>\r\n                              <p>Royalties Bond.**<br /></p>\r\n                            </td>\r\n                            <td>1</td>\r\n                            <td>\r\n                              ${transactionObj\r\n                                ? (<ITransaction>transactionObj)\r\n                                    .royalties_estimated_cost\r\n                                : ''}\r\n                            </td>\r\n                            <td>\r\n                              ${transactionObj\r\n                                ? (<ITransaction>transactionObj)\r\n                                    .royalties_estimated_cost\r\n                                : ''}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <p><strong>Royalties Blockchain Fee</strong></p>\r\n                            </td>\r\n                            <td>1</td>\r\n                            <td>\r\n                              ${transactionObj\r\n                                ? (<ITransaction>transactionObj).blockchain_fee\r\n                                : ''}\r\n                            </td>\r\n                            <td>\r\n                              ${transactionObj\r\n                                ? (<ITransaction>transactionObj).blockchain_fee\r\n                                : ''}\r\n                            </td>\r\n                          </tr>`\r\n                      : null}\r\n                    <tr>\r\n                      <td>\r\n                        <p><strong>Convenience Fee</strong></p>\r\n                      </td>\r\n                      <td>${collection ? collection.length : null}</td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? (<ITransaction>transactionObj).convenience_fee\r\n                          : ''}\r\n                      </td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? (<ITransaction>transactionObj).convenience_fee\r\n                          : ''}\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <p><strong>Blockchain Fee</strong></p>\r\n                      </td>\r\n                      <td>2</td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? (<ITransaction>transactionObj).blockchain_fee\r\n                          : ''}\r\n                      </td>\r\n                      <td>\r\n                        ${transactionObj\r\n                          ? Number(\r\n                              (<ITransaction>transactionObj).blockchain_fee\r\n                            ) * 2\r\n                          : ''}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>`\r\n            : null}\r\n        </div>\r\n      </div>\r\n      <sl-divider></sl-divider>\r\n      <div>\r\n        ${transactionObj &&\r\n        (<ITransaction>transactionObj).status &&\r\n        ['rejected', 'error'].includes((<ITransaction>transactionObj).status)\r\n          ? html`\r\n              <sl-button\r\n                variant=\"primary\"\r\n                style=\"margin-right:1rem\"\r\n                @click=${retry}\r\n                >Retry</sl-button\r\n              >\r\n            `\r\n          : null}\r\n        ${transactionObj &&\r\n        (<ITransaction>transactionObj).status &&\r\n        !['confirmed', 'canceled'].includes(\r\n          (<ITransaction>transactionObj).status\r\n        )\r\n          ? html`\r\n              <sl-button\r\n                variant=\"warning\"\r\n                outline\r\n                @click=${() => {\r\n                  if (\r\n                    window.confirm('Would you like to refund the transaction?')\r\n                  ) {\r\n                    refund();\r\n                  }\r\n                }}\r\n                style=\"\"\r\n                >Submit Refund</sl-button\r\n              >\r\n            `\r\n          : null}\r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\nexport default BakryptInvoice;\r\n"]}